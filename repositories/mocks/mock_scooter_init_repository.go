// Code generated by MockGen. DO NOT EDIT.
// Source: scooter_init.go

// Package mock is a generated GoMock package.
package mock

import (
	models "Dp218GO/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockScooterInitRepoI is a mock of ScooterInitRepoI interface.
type MockScooterInitRepoI struct {
	ctrl     *gomock.Controller
	recorder *MockScooterInitRepoIMockRecorder
}

// MockScooterInitRepoIMockRecorder is the mock recorder for MockScooterInitRepoI.
type MockScooterInitRepoIMockRecorder struct {
	mock *MockScooterInitRepoI
}

// NewMockScooterInitRepoI creates a new mock instance.
func NewMockScooterInitRepoI(ctrl *gomock.Controller) *MockScooterInitRepoI {
	mock := &MockScooterInitRepoI{ctrl: ctrl}
	mock.recorder = &MockScooterInitRepoIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScooterInitRepoI) EXPECT() *MockScooterInitRepoIMockRecorder {
	return m.recorder
}

// AddStatusesToScooters mocks base method.
func (m *MockScooterInitRepoI) AddStatusesToScooters(scooterIds []int, station models.Station) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddStatusesToScooters", scooterIds, station)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddStatusesToScooters indicates an expected call of AddStatusesToScooters.
func (mr *MockScooterInitRepoIMockRecorder) AddStatusesToScooters(scooterIds, station interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddStatusesToScooters",
		reflect.TypeOf((*MockScooterInitRepoI)(nil).AddStatusesToScooters), scooterIds, station)
}

// GetActiveStations mocks base method.
func (m *MockScooterInitRepoI) GetActiveStations() (*models.StationList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActiveStations")
	ret0, _ := ret[0].(*models.StationList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetActiveStations indicates an expected call of GetActiveStations.
func (mr *MockScooterInitRepoIMockRecorder) GetActiveStations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActiveStations",
		reflect.TypeOf((*MockScooterInitRepoI)(nil).GetActiveStations))
}

// GetOwnersScooters mocks base method.
func (m *MockScooterInitRepoI) GetOwnersScooters() (*models.SuppliersScooterList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOwnersScooters")
	ret0, _ := ret[0].(*models.SuppliersScooterList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOwnersScooters indicates an expected call of GetOwnersScooters.
func (mr *MockScooterInitRepoIMockRecorder) GetOwnersScooters() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOwnersScooters",
		reflect.TypeOf((*MockScooterInitRepoI)(nil).GetOwnersScooters))
}
